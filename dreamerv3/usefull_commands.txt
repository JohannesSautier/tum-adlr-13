Install Miniconda: 
mkdir -p ~/miniconda3
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
rm -rf ~/miniconda3/miniconda.sh

~/miniconda3/bin/conda init bash
~/miniconda3/bin/conda init zsh



Get conda env: 
conda create -n "ADLR" python=3.11
conda activate ADLR


Get general installations: 
sudo apt-get update && apt-get install -y
sudo apt-get install ffmpeg git vim curl software-properties-common
sudo apt-get install libglew-dev x11-xserver-utils xvfb
sudo apt-get clean


Get environment installations: 
pip install dm_control
pip install crafter


Get installations from the Readme and Jax: 
pip install -U -r tum-adlr-13/dreamerv3/embodied/requirements.txt
pip install -U -r tum-adlr-13/dreamerv3/dreamerv3/requirements.txt \
  -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

-> Incase there appears a Tensorflow waring try to install pip install ml-dtypes==0.3.1 and then the requirments.txt files again
-> Does not really work beacause then Jax is not uptodate





Run a training: 

python dreamerv3/main.py --logdir ~/logdir/{timestamp} --configs dmc_proprio --run.train_ratio 32 --task dmc_walker_walk --jax.platform cpu --jax.debug True 

Run a evaluation: 
python dreamerv3/main.py --logdir ~/logdir/20240604T205439 --configs dmc_proprio --run.script eval_only 

Check output: 
tensorboard --logdir=./logdir_train_eval/20240619T092924

Run training locally: 
--jax.platform cpu
--batch_size 1 

Running on GPU Machine but debug mode: 
--logdir ~/logdir/{timestamp} --configs dmc_proprio --run.train_ratio 32 --batch_size 1 --jax.debug True 

Running on GPU Machine but normal mode: 
python dreamerv3/main.py --logdir ~/logdir/{timestamp} --configs dmc_proprio --run.train_ratio 32 --batch_size 1 --jax.debug True 

What works: 
--logdir ~/logdir_train_eval/{timestamp} --configs dmc_proprio --run.script train_eval --jax.platform cpu --batch_size 1

Try the crafter game with hopefully video output -> Puts out Video: 
--logdir ~/logdir_train_eval/{timestamp} --configs crafter --run.script train_eval --jax.platform cpu --batch_size 1

Now we try to use the DM_control with Video input into the agent: 
--logdir ~/logdir_train_eval/{timestamp} --configs dmc_vision --run.script train_eval --jax.platform cpu --batch_size 1






Do a training with the dm proprio and the walker, set a small batchsize and train only a very bad model on it to get some logdir results.

    python dreamerv3/main.py --logdir ~/logir_new_model/{timestamp} --configs dmc_proprio --run.train_ratio 32 --jax.platform cpu --batch_size 1 --run.steps 1000 --run.script train

Launch tensorboard with the new model:

    tensorboard ~/logir_new_model/20240619T114045 --configs dmc_proprio --run.script eval_only

Do a evaluation with the new model:

python tum-adlr-13/dreamerv3/dreamerv3/main.py --logdir ~/logir_new_model/{timestamp} --run.script eval_only --run.from_checkpoint ~/logir_new_model/20240619T114522/checkpoint.ckpt --jax.platform cpu --batch_size 1 --run.steps 1000










Usefull  Commands: 

Cpu usage: TOP
GPU usage: nvidia-smi

