# ---------------------------------------------------------------------------- #
#                                 Installations                                #
# ---------------------------------------------------------------------------- #

# ------------------------ Connnect to cloud instance: ----------------------- #
gcloud compute config-ssh

# ------------------------------ Download Driver ----------------------------- #
https://github.com/GoogleCloudPlatform/compute-gpu-installation/releases
Choose latest version of pyz file her and download it:
curl -fSsL -O https://github.co........
run the skript: 
sudo python3 cuda_installer.pyz install_cuda
VM reboots then run skript again 
VM reboots again but then everything is installed 

# ---------------------------- Install Miniconda: ---------------------------- #
mkdir -p ~/miniconda3
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
rm -rf ~/miniconda3/miniconda.sh

~/miniconda3/bin/conda init bash
~/miniconda3/bin/conda init zsh

# ------------------------------ Get conda env: ------------------------------ #
conda create -n "ADLR" python=3.11
conda activate ADLR

# ------------------------ Get general installations: ------------------------ #
sudo apt-get update && apt-get install -y
sudo apt-get install ffmpeg git vim curl software-properties-common
sudo apt-get install libglew-dev x11-xserver-utils xvfb
sudo apt-get clean


# ---------------------- Get environment installations: ---------------------- #
pip install dm_control
pip install crafter


# ---------------- Get installations from the Readme and Jax: ---------------- #
pip install -U -r tum-adlr-13/dreamerv3/embodied/requirements.txt
pip install -U -r tum-adlr-13/dreamerv3/dreamerv3/requirements.txt \
  -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

-> Incase there appears a Tensorflow waring try to install pip install ml-dtypes==0.3.1 and then the requirments.txt files again
-> Does not really work beacause then Jax is not uptodate

# -------------------------- set up git credentials -------------------------- #
git config --global user.name "Your Name"
git config --global user.email "youremail@example.com"


# ---------------------------------------------------------------------------- #
#                               Run in debug mode                              #
# ---------------------------------------------------------------------------- #

    python dreamerv3/dreamerv3/main.py --logdir ~/logdir_debug/{timestamp} --configs dmc_proprio debug --batch_size 1 --run.steps 3000 

Evaluate this model: 
    python dreamerv3/dreamerv3/main.py --logdir ~/logdir_debug/{timestamp} --configs dmc_proprio debug --batch_size 1 --run.from_checkpoint ~/logdir_debug/20240703T093224/checkpoint.ckpt --run.script eval_only --run.steps 200

Launch the tensorboard: 
    tensorboard --logdir logir_new_model/20240619T134632


# ---------------------------------------------------------------------------- #
#                       Run a walker walk training script                      #
# ---------------------------------------------------------------------------- #

Run this model: 
    python tum-adlr-13/dreamerv3/dreamerv3/main.py --logdir ~/tum-adlr-13/Logs/logdir1/{timestamp} --configs dmc_proprio --run.script train --seed 3 

Evaluate this model: 
    python tum-adlr-13/dreamerv3/dreamerv3/main.py --logdir ~/logdir/{timestamp} --configs dmc_proprio --run.script eval_only --run.from_checkpoint ~/logdir/20240628T155338/checkpoint.ckpt --run.num_envs 1 --run.num_envs_eval 1 --run.steps 500

Evaluate this model completly: 
    python tum-adlr-13/dreamerv3/dreamerv3/main.py --logdir ~/logdir/{timestamp} --configs dmc_proprio --run.script eval_only --run.from_checkpoint ~/logdir/20240628T155338/checkpoint.ckpt 

Load the tensorboard event file: 
    tensorboard --logdir ~/logdir/20240702T201609

Run the video maker: python tum-adlr-13/dreamerv3/make_video.py